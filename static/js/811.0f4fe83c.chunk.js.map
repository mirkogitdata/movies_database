{"version":3,"file":"static/js/811.0f4fe83c.chunk.js","mappings":"sOACA,EAA8B,kC,SCiC9B,MA5BA,SAAsBA,GAElB,IAAMC,EAAOD,EAAME,yBACf,SAAC,IAAI,CACDC,MAAO,CAAEC,MAAO,OAAQC,WAAY,uBACpCC,QAAS,EACL,SAACC,EAAA,EAAc,CAACJ,MAAO,CAAEK,SAAU,UAE/BC,QAAS,kBAAMT,EAAME,uBAAuBF,EAAMU,MAAMC,MAAM,KAEpE,UAEF,gBAAIC,UAAWC,EAAoB,WAC/B,gBAAKC,IAAI,MAAMC,IAAKf,EAAMU,MAAMM,UAChC,2BACI,uBAAIhB,EAAMU,MAAMC,SAChB,kCAAUX,EAAMU,MAAMO,SACtB,mCAAWjB,EAAMU,MAAMQ,iBAMvC,OACI,8BAAGjB,GAEX,EC+DA,EAnEqB,WAElB,IAAMkB,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAc3B,OACG,SAAC,IAAK,CACHC,MAAM,cACNC,KAAMJ,EAAQK,UACdC,OAAQ,KACRC,KAAM,kBAAMP,EAAQQ,cAAa,EAAM,EACvCC,SAAU,kBAAMT,EAAQQ,cAAa,EAAM,EAAC,UAE5C,SAAC,KAAe,CAACE,UApBL,SAACC,GAChB,GAAKA,EAAOC,YAAZ,CAGA,IAAMC,EA9BI,SAACC,EAAMC,EAAYC,GAChC,IAAML,EAASM,MAAMC,KAAKJ,GAC1B,EAAkBH,EAAOQ,OAAOJ,EAAY,GAArCK,GAAuC,YAAhC,GAEd,OADAT,EAAOQ,OAAOH,EAAU,EAAGI,GACpBT,CACV,CAyB8BU,CACrBrB,EAAQsB,SACRX,EAAOY,OAAOC,MACdb,EAAOC,YAAYY,OAGtBxB,EAAQyB,YAAYZ,EAPpB,CAQH,EAS4C,UACnC,SAAC,KAAS,CAACa,YAAY,YAAW,SAC9B,SAACC,EAAUC,GAAQ,OACjB,mCACOD,EAASE,gBAAc,IAC3BC,IAAKH,EAASI,SACd/C,OApCCgD,EAoCmBJ,EAASI,eApCR,CACvC9C,WAAY8C,EAAiB,YAAc,cAC3CC,QAZU,EAaVhD,MAAO,SAiCwD,UAE5Ce,EAAQsB,SAASY,KAAI,SAAC3C,EAAOiC,GAAK,OAChC,SAAC,KAAS,CAEPW,YAAa5C,EAAM6C,OACnBZ,MAAOA,EAAM,SAEZ,SAACG,EAAUC,GAAQ,OACjB,wCAEGE,IAAKH,EAASI,UACVJ,EAASU,gBACTV,EAASW,iBAAe,IAC5BtD,OA1DXuD,EA2DcX,EAASW,WA3DXC,EA4DEb,EAASU,eAAerD,OA5DZ,QAC7CyD,WAAY,OACZR,QAASS,EACTzD,MAAO,OACP0D,OAAO,OAAD,OANI,EAMS,QACnBzD,WAAYqD,EAAa,aAAe,eACrCC,IAuD6B,UAEF,SAAC,EAAY,CACVjD,MAAOA,EACPR,uBAAwBiB,EAAQjB,2BAX9BQ,EAAM6C,QAtDvB,IAACG,EAAYC,CAoEE,GApBJjD,EAAM6C,OAsBF,IAEdT,EAASiB,gBAhEV,IAACZ,CAiEE,OAMxB,C","sources":["webpack://my-app/./src/components/FavoriteCard/FavoriteCard.module.css?fc10","components/FavoriteCard/FavoriteCard.js","pages/FavoriteList.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dropDetails\":\"FavoriteCard_dropDetails__l92Pa\"};","import React from \"react\";\nimport { Card } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport classes from '../FavoriteCard/FavoriteCard.module.css';\n\n\nfunction FavoriteCard(props) {\n\n    const card = props.removeFromFavoriteList && (\n        <Card\n            style={{ width: '100%', background: 'rgba(51, 56, 61, 1)' }}\n            actions={[\n                <DeleteOutlined style={{ fontSize: '1.3rem' }}\n\n                    onClick={() => props.removeFromFavoriteList(props.movie.Title)}\n                />\n            ]}\n        >\n            <ul className={classes.dropDetails} >\n                <img alt=\"ups\" src={props.movie.Poster} />\n                <li>\n                    <p>{props.movie.Title}</p>\n                    <p>year: {props.movie.Year}</p>\n                    <p>genre: {props.movie.Genre}</p>\n                </li>\n            </ul>\n        </Card>\n    )\n\n    return (\n        <>{card}</>\n    )\n}\n\nexport default FavoriteCard;\n\n","import React, { useContext } from 'react';\nimport { Modal } from 'antd';\nimport AuthContext from '../context/auth-context';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport FavoriteCard from '../components/FavoriteCard/FavoriteCard';\n\nconst reorder = (list, startIndex, endIndex) => {\n   const result = Array.from(list);\n   const [removed] = result.splice(startIndex, 1);\n   result.splice(endIndex, 0, removed);\n   return result;\n};\nconst grid = 2;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n   userSelect: 'none',\n   padding: grid * 2,\n   width: '100%',\n   margin: `0 0 ${grid}px 0`,\n   background: isDragging ? 'lightgreen' : 'transparent',\n   ...draggableStyle,\n});\nconst getListStyle = (isDraggingOver) => ({\n   background: isDraggingOver ? 'lightblue' : 'transparent',\n   padding: grid,\n   width: '100%',\n});\n\nconst FavoriteList = () => {\n\n   const context = useContext(AuthContext);\n\n   const onDragEnd = (result) => {\n      if (!result.destination) {\n         return;\n      }\n      const newFavoriteList = reorder(\n         context.favorite,\n         result.source.index,\n         result.destination.index\n      );\n\n      context.setFavorite(newFavoriteList);\n   };\n   return (\n      <Modal\n         title='Movies List'\n         open={context.modalShow}\n         footer={null}\n         onOk={() => context.setModalShow(false)}\n         onCancel={() => context.setModalShow(false)}\n      >\n         <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId='droppable'>\n               {(provided, snapshot) => (\n                  <div\n                     {...provided.droppableProps}\n                     ref={provided.innerRef}\n                     style={getListStyle(snapshot.isDraggingOver)}\n                  >\n                     {context.favorite.map((movie, index) => (\n                        <Draggable\n                           key={movie.imdbID}\n                           draggableId={movie.imdbID}\n                           index={index}\n                        >\n                           {(provided, snapshot) => (\n                              <div\n                                 key={movie.imdbID}\n                                 ref={provided.innerRef}\n                                 {...provided.draggableProps}\n                                 {...provided.dragHandleProps}\n                                 style={getItemStyle(\n                                    snapshot.isDragging,\n                                    provided.draggableProps.style\n                                 )}\n                              >\n                                 <FavoriteCard\n                                    movie={movie}\n                                    removeFromFavoriteList={context.removeFromFavoriteList}\n\n                                 />\n                              </div>\n                           )}\n                        </Draggable>\n                     ))}\n                     {provided.placeholder}\n                  </div>\n               )}\n            </Droppable>\n         </DragDropContext>\n      </Modal>\n   );\n}\n\nexport default FavoriteList;\n"],"names":["props","card","removeFromFavoriteList","style","width","background","actions","DeleteOutlined","fontSize","onClick","movie","Title","className","classes","alt","src","Poster","Year","Genre","context","useContext","AuthContext","title","open","modalShow","footer","onOk","setModalShow","onCancel","onDragEnd","result","destination","newFavoriteList","list","startIndex","endIndex","Array","from","splice","removed","reorder","favorite","source","index","setFavorite","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","padding","map","draggableId","imdbID","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","margin","placeholder"],"sourceRoot":""}